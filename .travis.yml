
language: cpp
sudo: require
dist: xenial

common_sources: &all_sources
  - ubuntu-toolchain-r-test
  - llvm-toolchain-trusty

matrix:
  include:
    - os: linux
      compiler: gcc
      addons: &gcc8
        apt:
          sources: *all_sources
          packages: 
            - g++-8
      env:
        - MATRIX_EVAL="export CC=gcc-8; export CXX=g++-8;"
      after_success:
        # install lcov
        - wget https://github.com/linux-test-project/lcov/releases/download/v1.14/lcov-1.14.tar.gz
        - tar xvfz lcov-1.14.tar.gz;
        - sudo make install -C lcov-1.14
        - lcov --version
        # compile and run with coverage
        - cmake -H. -Bbuild/coverage -DCMAKE_BUILD_TYPE=Debug -DLARS_PARSER_ENABLE_TESTS=On -DENABLE_TEST_COVERAGE=On -DCMAKE_CXX_COMPILER=g++-8
        - cmake --build build/coverage
        - cmake --build build/coverage --target test
        # create coverage report
        - lcov --gcov-tool $(which gcov-8) --directory . --capture --no-external --exclude "*tests*" --exclude "*_deps*" --quiet --output-file coverage.info
        # output coverage
        - lcov --gcov-tool $(which gcov-8) --list coverage.info
        - bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"

    - os: linux
      compiler: clang
      addons:
          apt:
              sources: *all_sources
              packages:
                - g++-8
                - clang-6.0
      env:
        - MATRIX_EVAL="export CC=clang-6.0; export CXX=clang++-6.0;"

before_install:
  # Update compilers
  - eval "${MATRIX_EVAL}"
  - echo "CC=$CC CXX=$CXX"
  # Install a supported cmake version (>= 3.14)
  - wget -O cmake.sh https://cmake.org/files/v3.14/cmake-3.14.0-Linux-x86_64.sh 
  - sudo sh cmake.sh --skip-license --exclude-subdir --prefix=/usr/local
  - export PATH=/usr/local/bin:$PATH
  - cmake --version

install:
  - cmake -H. -Bbuild -DLARS_PARSER_BUILD_GLUE_ELEMENT=On
  - cmake --build build
  - sudo cmake --build build --target install

script:
  # tests
  - cmake -Htests -Bbuild/test  
  - cmake --build build/test
  - CTEST_OUTPUT_ON_FAILURE=1 cmake --build build/test --target test
  # examples
  - cmake -Hexamples -Bbuild/examples  
  - cmake --build build/examples
