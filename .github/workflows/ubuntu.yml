name: Ubuntu

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

env:
  CTEST_OUTPUT_ON_FAILURE: 1
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

jobs:
  build:

    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v1

    - name: install valgrind
      run: sudo apt install -y valgrind

    - name: configure
      run: CXX=g++-8 cmake -Htest -Bbuild -DCMAKE_BUILD_TYPE=Debug

    - name: build
      run: cmake --build build -j4
        
    - name: test
      run: cmake --build build -j4
        
    - name: run tests with valgrind
      run: valgrind --track-origins=yes --error-exitcode=1 --leak-check=full ./build/GlueTests

    - name: configure with code coverage
      run: CXX=g++-8 cmake -Htest -Bbuild -DENABLE_TEST_COVERAGE=1

    - name: build with code coverage
      run: cmake --build build -j4

    - name: test with code coverage
      run: |
        cd build
        ctest --build-config Debug

    - name: install code coverage tools
      run: |
        wget https://github.com/linux-test-project/lcov/releases/download/v1.14/lcov-1.14.tar.gz
        tar xvfz lcov-1.14.tar.gz;
        sudo make install -C lcov-1.14

    - name: collect code coverage
      run: |
        lcov --gcov-tool $(which gcov-8) --directory . --capture --no-external --exclude "*tests*" --exclude "*_deps*" --quiet --output-file coverage.info
        lcov --gcov-tool $(which gcov-8) --list coverage.info
        bash <(curl -s https://codecov.io/bash) -f coverage.info || echo "Codecov did not collect coverage reports"
